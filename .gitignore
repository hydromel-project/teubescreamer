# JUCE specific
JuceLibraryCode/
*.jucer
*.xcodeproj/
*.xcworkspace/
*.xcworkspacedata/
*.xcuserstate/
xcuserdata/
*.sln
*.vcxproj
*.vcxproj.filters
*.vcxproj.user
*.suo
*.APS/
*.layout
*.options
Builds/
*-deploy/

# C++ build artifacts
*.o
*.obj
*.lib
*.dll
*.dylib
*.so
*.a
*.exe
*.app/
*.framework/
*.kext/
*.bundle/
*.dSYM/
*.pch
*.pdb
*.ipch/
*.aps
*.sdf
*.opensdf
*.log
*.tlog/
*.ilk
*.map
*.exp

# Visual Studio
.vs/
*.VC.db
*.VC.VC.opendb
*vcxproj.user
*vcxproj.filters.user
*vcxproj.backup
*sln.docstates
*sln.suo
*vcxproj.scan
*vspscc
*_i.c
*_p.c
*_h.h
*.ncb
*.bsc
*.sbr
*.tlh
*.tli
*.aps

# macOS
.DS_Store
*.DS_Store
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
Desktop.ini
Thumbs.db
ehthumbs.db

# Rider
.idea/

# CLion
cmake-build-*/

# User-specific files
*.user
*.local

# Output directories
Debug/
Release/
build/
**/build/
**/Build/
**/build-*/
**/Build-*/
**/out/
**/Out/
**/bin/
**/Bin/
**/lib/
**/Lib/

# Test coverage
*.gcno
*.gcda
*.gcov
coverage/

# Backup files
*.bak
*.old
*~

# Temporary files
*.tmp
*.temp

# Log files
*.log
logs/

# Distribution files
*.zip
*.tar.gz
*.pkg
*.dmg

# CMake files (if used directly, though JUCE/Projucer handles this mostly)
CMakeCache.txt
CMakeFiles/
cmake_install.cmake
Makefile
install_manifest.txt
compile_commands.json

# C++ Package Managers (e.g. Conan, vcpkg)
conanbuildinfo.cmake
conanbuildinfo.txt
conaninfo.txt
conan.lock
vcpkg_installed/
.vcpkg-root

# Editor backup files (common patterns)
*~
*.swp
*.swo
.*.swp
.*.swo
*.bak
*.orig

# OS specific caches/configs
.gradle/
.idea/
.vscode/
*node_modules/

# Common VST3/AU/AAX build artifacts (beyond what JUCE itself creates in Builds/)
*.vst3/
*.component/
*.aaxplugin/

# If you use precompiled headers
PrecompiledHeader.pch

# Rider specific
.ideaRider/ 